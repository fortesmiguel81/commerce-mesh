name: Security Scanning

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # CodeQL Analysis
  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp', 'javascript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Setup .NET (for C#)
      if: matrix.language == 'csharp'
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Build .NET solution (for C#)
      if: matrix.language == 'csharp'
      run: |
        dotnet restore CommerceMesh.sln
        dotnet build CommerceMesh.sln --no-restore

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  # OWASP Dependency Check
  dependency-check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'CommerceMesh'
        path: '.'
        format: 'ALL'
        args: >
          --enableRetired
          --enableExperimental
          --failOnCVSS 7

    - name: Upload Test results
      uses: actions/upload-artifact@v4
      with:
        name: dependency-check-report
        path: reports/

  # Container Security Scanning
  container-security:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
    - uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner in repo mode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # .NET Security Analysis
  dotnet-security:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore CommerceMesh.sln

    - name: Check for vulnerable packages
      run: |
        dotnet list package --vulnerable --include-transitive 2>&1 | tee vulnerable-packages.log
        if grep -q "has the following vulnerable packages" vulnerable-packages.log; then
          echo "::error::Vulnerable packages found!"
          cat vulnerable-packages.log
          exit 1
        fi

    - name: Run security code analysis
      run: |
        # Build with security analyzers enabled (analyzers are already included in .NET 9 SDK)
        dotnet build CommerceMesh.sln --verbosity normal /p:RunAnalyzersDuringBuild=true /p:TreatWarningsAsErrors=false
